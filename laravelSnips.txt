Models: app/
View: resources/views
Controller: app/Http/Controllers

//Install and setup laravel on development server

//CREATE NEW LARAVEL PROJECT
composer create-project laravel/laravel larasample

//SETUP VIRTUAL HOST FOR CREATED LARAVEL PROJECT

//modify virtual host file
C:\xampp\apache\conf\extra
httpd-vhosts.conf

<VirtualHost *:80>
    DocumentRoot "C:/xampp/htdocs"
    ServerName localhost
</VirtualHost>

<VirtualHost *:80>
    DocumentRoot "C:/xampp/htdocs/project_name/public"
    ServerName project_name.io
</VirtualHost>

//modify hosts file
C:\Windows\System32\drivers\etc
hosts file
127.0.0.1 localhost
127.0.0.1 project_name.io

//Restart Apache for changes to take place

------------------

//NODE

//make Sass compiling and mix js compiling available to us
npm install

//compile sass/js
npm run dev

//compile sass/js everytime you save sass and js file
npm run watch

//install axios
npm install --save axios

------------------

COMPOSER
//create laravel project
composer create-project laravel/laravel larasample

//Use laravel Collective for forms
//check website for info and installation https://laravelcollective.com/docs/5.4/html
composer require "laravelcollective/html":"^5.4.0"

------------------

SETUP VIRTUAL HOST
C:\xampp\apache\conf\extra

httpd-vhosts.conf

<VirtualHost *:80>
    DocumentRoot "C:/xampp/htdocs"
    ServerName localhost
</VirtualHost>

<VirtualHost *:80>
    DocumentRoot "C:/xampp/htdocs/project_name/public"
    ServerName project_name.io
</VirtualHost>

C:\Windows\System32\drivers\etc
hosts file
127.0.0.1 localhost
127.0.0.1 project_name.io

------------------

ARTISAN
//create a new controller
php artisan make:controller NameController


------

LARAVEL

//data dump
dd($request->all());

//Title
{{ config('app.name', 'LaraFirst') }}

//app.blade.php
@yield('content')

//filename.blade.php
@extends('layouts.app')
@section('content')
@endsection

//opening a laravelcollective form
{!! Form::open(['url' => 'contact/submit']) !!}
//
{!! Form::close() !!}

//show hide to user that are login or not
@if(Auth::check())
    //html code here if user are login
@endif

//validate user input in store function
$this->validate($request, [
    'title' => 'required',
    'body' => 'required',
    'featured_image' => 'image|nullable|max:1999'
]);

//Create a Laravel Project via Composer
composer create-project --prefer-dist laravel/laravel blog "5.2.*"
//Require Laravel Collective for HTML forms
composer require "laravelcollective/html":"^5.4.0"

//form template
{!! Form::open(['action' => 'PostsController@store', 'method' => 'POST', 'enctype' => 'multipart/form-data']) !!}
    <div class="form-group">
        {{Form::label('title', 'Title')}}
        {{Form::text('title', '', ['class'=>'form-control', 'placeholder'=>'Enter the Title'])}}
    </div>
    <div class="form-group">
        {{Form::label('content', 'Content')}}
        {{Form::textarea('content', '', ['id'=>'article-ckeditor','class'=>'form-control', 'placeholder'=>'Enter the content'])}}
    </div>
    <div class="form-group">
        {{Form::label('featured image', 'Featured Image')}}
        {{Form::file('featured_image', '')}}
    </div>
    {{Form::submit('Submit', ['class'=>'btn btn-primary'])}}
{!! Form::close() !!}


ARTISAN
//artisan simple way dummy data insert called by factories, faker
//create development server on the created new laravel project
php artisan serve
//create a model with a Database Migration
php artisan make:model ModelName -m
//run the migration of the created model
php artisan migrate
php artisan 
//create a controller
php artisan make:controller NameControllers
//create a controller with CRUD functionalities/Methods
php artisan make:controller TodosController --resource
//run tinker
php artisan tinker
$dbname = new App\DbName();
//enable authentication
php artisan make:auth
//view all routes
php artisan route::list

//migrate a model
php artisan migrate

//modify first app/providers/AppServiceProviders.php when running a migration to prevent bugs
use Illuminate\Support\Facades\Schema;
    public function boot()
    {
        Schema::defaultStringLength(191);
    }


//LARAVEL
//to use model, insert the model in the controller
use App\ModelName;
//adds route to all CRUD functionalities/Methods from controller with --resource
Route::resource('listings', 'ListingsController');


//TINKER
$todo = new App\Todo();
$todo->text='Todo One';
$todo->body='this is todo one body';
$todo->due='Tuesday';
$todo->save();
App\todo::all();